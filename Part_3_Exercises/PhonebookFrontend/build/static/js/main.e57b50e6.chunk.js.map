{"version":3,"sources":["components/Filter.js","components/Numbers.js","components/Form.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","inputHandler","value","onChange","Person","person","deleteEntry","name","number","onClick","Numbers","persons","map","key","id","Form","props","nameHandler","numberHandler","type","submitHandler","baseUrl","axios","get","then","response","data","newEntry","post","newObject","put","delete","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationText","setNotifyText","notificationClass","setNotifyClass","useEffect","personService","entries","filteredPersons","toLowerCase","includes","event","target","preventDefault","window","confirm","newPerson","p","returnedPerson","setTimeout","catch","updatePerson","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e57b50e6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, inputHandler }) => (\n  <div>\n        filter names\n    <input\n      value={filter}\n      onChange={inputHandler}\n    />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst Person = ({ person, deleteEntry }) => (\n  <p>\n    {person.name}  {person.number}\n    <button onClick={() => deleteEntry(person)}>delete</button>\n  </p>\n)\n\nconst Numbers = ({ persons, deleteEntry }) => {\n\n  const buildList = () => {\n    return persons.map(person =>\n      <Person\n        key={person.id}\n        person={person}\n        deleteEntry={deleteEntry}\n      />\n    )\n  }\n  return <div>{buildList()}</div>\n}\n\nexport default Numbers","import React from 'react'\n\nconst Form = (props) => (\n  <form>\n    <div>\n            name:\n      <input\n        value={props.name}\n        onChange={props.nameHandler}\n      />\n    </div>\n            number:\n    <input\n      value={props.number}\n      onChange={props.numberHandler}\n    />\n    <div>\n      <button type=\"submit\" onClick={props.submitHandler}>add</button>\n    </div>\n  </form>\n)\n\nexport default Form","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newEntry => {\n  const request = axios.post(baseUrl, newEntry)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Numbers from './components/Numbers'\nimport Form from './components/Form'\nimport personService from './services/persons'\n\nconst Notification = ({ message, className }) => {\n  if(message === null) {\n    return null\n  }\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notificationText, setNotifyText ] = useState(null)\n  const [ notificationClass, setNotifyClass ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(entries => {\n        setPersons(entries)\n      })\n  }, [])\n\n  const updatePerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    const id = persons.filter(p => p.name === newName)[0].id\n\n    personService\n      .update(id, newPerson)\n      .then( returnedPerson => {\n        setPersons(persons.map(p => {\n          if(p.name === returnedPerson.name){\n            return returnedPerson\n          }\n          else return p\n        }))\n\n        setNewName('')\n        setNewNumber('')\n        setNotifyClass('pos_notification')\n        setNotifyText(`Entry for ${returnedPerson.name} was updated`)\n        setTimeout(() => setNotifyText(null), 2000)\n      })\n      .catch(() => {\n        setNewName('')\n        setNewNumber('')\n        setNotifyClass('neg_notification')\n        setNotifyText(`${newPerson.name} has already been removed from the server`)\n        setPersons(persons.filter(p => p.name !== newPerson.name))\n        setTimeout(() => setNotifyText(null), 2000)\n      })\n  }\n\n  const createPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setNewName('')\n        setNewNumber('')\n        setNotifyClass('pos_notification')\n        setNotifyText(`Added ${returnedPerson.name}`)\n        setPersons(persons.concat(returnedPerson))\n        setTimeout(() => setNotifyText(null), 2000)\n      })\n      .catch(error => {\n        setNewName('')\n        setNewNumber('')\n        setNotifyClass('neg_notification')\n        setNotifyText(`${error.response.data.error}`)\n        setTimeout(() => setNotifyText(null), 5000)\n      })\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault()\n    if(persons.map(person => person.name).includes(newName)){\n      const shouldUpdate =\n                window.confirm(`${newName} is already in the phonebook, replace old number with new one?`)\n      if(shouldUpdate)\n        updatePerson()\n    }\n    else {\n      createPerson()\n    }\n  }\n\n  const deletePerson = person => {\n    const shouldDelete = window.confirm(`Are you sure you want to delete ${person.name}?`)\n    if(shouldDelete){\n      personService\n        .remove(person.id)\n        .then(() => {\n          setNotifyClass('pos_notification')\n          setNotifyText(`Deleted ${person.name}`)\n          setPersons(persons.filter(p => p !== person))\n          setTimeout(() => setNotifyText(null), 2000)\n        })\n    }\n  }\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterInput = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const filteredPersons = persons.filter(person =>\n    person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={newFilter} inputHandler={handleFilterInput}/>\n      <h2>add new entry</h2>\n      <Notification message={notificationText} className={notificationClass}/>\n      <Form\n        name={newName}\n        number={newNumber}\n        nameHandler={handleNameInput}\n        numberHandler={handleNumberInput}\n        submitHandler={handleFormSubmit}\n      />\n      <h3>Numbers</h3>\n      <Numbers\n        persons={filteredPersons}\n        deleteEntry={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}